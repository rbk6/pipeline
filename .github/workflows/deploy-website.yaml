# CI/CD workflow for https://github.com/rbk6/website
name: deploy website

on:
  repository_dispatch:
    types: [deploy]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
        with:
          repository: rbk6/website
          token: ${{ secrets.DEPLOY_TOKEN }}
          ref: master

      - name: build docker image
        id: build
        run: |
          COMMIT_SHA=$(git rev-parse --short HEAD)
          echo "COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_ENV
          echo "building docker image for commit $COMMIT_SHA..."
          docker build -t website:$COMMIT_SHA --target build . || exit 1
          echo "docker image built successfully."

      # todo: add tests step

      - name: login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: push image to docker hub
        run: |
          echo "tagging the docker image..."
          docker tag website:$COMMIT_SHA ${{ secrets.DOCKER_USERNAME }}/website:$COMMIT_SHA
          echo "pushing image to docker hub..."
          docker push ${{ secrets.DOCKER_USERNAME }}/website:${{ env.COMMIT_SHA }}
          echo "image pushed successfully."

      - name: ssh to vps and deploy with docker-compose
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            cd ~/deploy-website
            echo "logging in to docker hub on VPS..."
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

            echo "pulling the latest docker image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/website:${{ env.COMMIT_SHA }}

            echo "updating docker-compose with the new image..."
            sed -i 's|image: .*$|image: ${{ secrets.DOCKER_USERNAME }}/website:${{ env.COMMIT_SHA }}|' docker-compose.yaml

            echo "restarting the service..."
            docker-compose down
            docker-compose up -d --pull always

            echo "cleanup unused docker resources..."
            docker image prune -f
